"""
Написать функцию host_range_ping_tab(), возможности которой основаны на функции из примера 2.
Но в данном случае результат должен быть итоговым по всем ip-адресам, представленным в табличном формате
(использовать модуль tabulate). Таблица должна состоять из двух колонок
"""

from tabulate import tabulate
from task_2 import host_range_ping


def host_range_ping_tab():
    """
    Табличное отображение результата перебора ip адресов, вернувшихся из функции host_range_ping
    """
    # запрашиваем хосты, проверяем доступность, получаем словарь результатов
    result_dict = host_range_ping()
    print()
    # выводим в табличном виде
    print(tabulate([result_dict], headers='keys', tablefmt="grid", stralign="center"))


if __name__ == "__main__":
    host_range_ping_tab()

'''
Результат:

Введите первоначальный адрес: radif.ru
*** Доменное имя: radif.ru преобразовано в ip-адрес: 45.89.230.30 ***
Сколько адресов проверить?: 10
45.89.230.30 - Узел доступен
45.89.230.31 - Узел недоступен
45.89.230.32 - Узел доступен
45.89.230.33 - Узел доступен
45.89.230.34 - Узел доступен
45.89.230.35 - Узел недоступен
45.89.230.36 - Узел доступен
45.89.230.37 - Узел недоступен
45.89.230.38 - Узел недоступен
45.89.230.39 - Узел доступен

+------------------+--------------------+
|  Доступные узлы  |  Недоступные узлы  |
+==================+====================+
|   45.89.230.30   |    45.89.230.31    |
|   45.89.230.32   |    45.89.230.35    |
|   45.89.230.33   |    45.89.230.37    |
|   45.89.230.34   |    45.89.230.38    |
|   45.89.230.36   |                    |
|   45.89.230.39   |                    |
+------------------+--------------------+
'''
